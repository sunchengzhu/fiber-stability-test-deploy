#!/bin/bash

PORTS=($(seq 8231 8238))
peer_ids=()

for idx in "${!PORTS[@]}"; do
  PORT=${PORTS[idx]}
  if [ "$idx" -lt 5 ]; then
    ip="18.167.71.41"
  elif [ "$idx" -eq 5 ]; then
    ip="43.198.254.225"
  elif [ "$idx" -ge 6 ]; then
    ip="43.199.108.57"
  fi

  response=$(curl -s -X POST http://"$ip":"$PORT" \
    -H "Content-Type: application/json" \
    -d "$(printf '{
                 "id": %d,
                 "jsonrpc": "2.0",
                 "method": "node_info",
                 "params": []
             }' "$id")")
  if [ $? -eq 0 ]; then
    peer_id=$(echo "$response" | jq -r '.result.peer_id' | sed "s/0.0.0.0/$ip/")
    peer_ids+=("$peer_id")
  else
    echo "Query to port $PORT failed."
  fi
done

f_peer_id="${peer_ids[5]}"

json_data=$(cat <<EOF
{
    "id": 1,
    "jsonrpc": "2.0",
    "method": "list_channels",
    "params": [
        {
            "peer_id": "$f_peer_id"
        }
    ]
}
EOF
)

curl --location 'http://18.167.71.41:8231' --header 'Content-Type: application/json' --data "$json_data" | jq -r

payment_preimage="0x$(openssl rand -hex 32)"

response=$(curl --location 'http://43.199.108.57:8237' \
  --header 'Content-Type: application/json' \
  --data "$(cat <<EOF
{
    "id": 2,
    "jsonrpc": "2.0",
    "method": "new_invoice",
    "params": [{
        "amount": "0x2540be400",
        "currency": "Fibt",
        "description": "test invoice generated by node g",
        "expiry": "0xe10",
        "final_cltv": "0x28",
        "payment_preimage": "$payment_preimage",
        "hash_algorithm": "sha256"
    }]
}
EOF
)")

echo "$response" | jq -r '.result'
invoice_address=$(echo "$response" | jq -r '.result.invoice_address')

curl --location 'http://18.167.71.41:8231' --header 'Content-Type: application/json' --data "$(cat <<EOF
{
    "id": 3,
    "jsonrpc": "2.0",
    "method": "send_payment",
    "params": [{
        "invoice": "$invoice_address"
    }]
}
EOF
)" | jq -r

sleep 5

curl --location 'http://18.167.71.41:8231' --header 'Content-Type: application/json' --data "$json_data" | jq -r
